<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="env(CICADA_ADMINISTRATION_PATH_NAME)">admin</parameter>
        <parameter key="cicada_administration.path_name">%env(resolve:CICADA_ADMINISTRATION_PATH_NAME)%</parameter>
    </parameters>

    <services>
        <service id="Cicada\Administration\Command\DeleteAdminFilesAfterBuildCommand">
            <tag name="console.command"/>
        </service>

        <service id="Cicada\Administration\Command\DeleteExtensionLocalPublicFilesCommand">
            <argument type="service" id="kernel"/>
            <tag name="console.command"/>
        </service>
        

        <service id="Cicada\Administration\Controller\AdministrationController"
                 public="true">
            <argument type="service" id="Cicada\Core\Framework\Adapter\Twig\TemplateFinder"/>
            <argument type="service" id="Cicada\Core\Framework\Store\Services\FirstRunWizardService"/>
            <argument type="service" id="Cicada\Administration\Snippet\SnippetFinder"/>
            <argument>%kernel.supported_api_versions%</argument>
            <argument type="service" id="Cicada\Administration\Framework\Routing\KnownIps\KnownIpsCollector"/>
            <argument type="service" id="Cicada\Core\Framework\Util\HtmlSanitizer"/>
            <argument type="service" id="Cicada\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
            <argument type="service" id="parameter_bag"/>
            <argument type="service" id="cicada.filesystem.asset"/>

            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Cicada\Administration\Controller\AdminSearchController" public="true">
            <argument type="service" id="Cicada\Core\Framework\DataAbstractionLayer\Search\RequestCriteriaBuilder"/>
            <argument type="service" id="Cicada\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
            <argument type="service" id="Cicada\Administration\Service\AdminSearcher"/>
            <argument type="service" id="serializer"/>
            <argument type="service" id="Cicada\Core\Framework\Api\Acl\AclCriteriaValidator"/>
            <argument type="service" id="Cicada\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
            <argument type="service" id="Cicada\Core\Framework\Api\Serializer\JsonEntityEncoder"/>

            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Cicada\Administration\Controller\UserConfigController" public="true">
            <argument type="service" id="user_config.repository"/>
            <argument type="service" id="Doctrine\DBAL\Connection"/>

            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Cicada\Administration\Controller\NotificationController" public="true">
            <argument type="service" id="cicada.rate_limiter"/>
            <argument type="service" id="Cicada\Administration\Notification\NotificationService"/>

            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Cicada\Administration\Notification\NotificationService" public="true">
            <argument type="service" id="notification.repository"/>
        </service>

        <service id="Cicada\Administration\Notification\Subscriber\UpdateSubscriber">
            <argument type="service" id="Cicada\Administration\Notification\NotificationService" />
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="Cicada\Administration\Service\AdminSearcher">
            <argument type="service" id="Cicada\Core\Framework\DataAbstractionLayer\DefinitionInstanceRegistry"/>
        </service>

        <service id="Cicada\Administration\Framework\Routing\NotFound\AdministrationNotFoundSubscriber">
            <argument>%cicada_administration.path_name%</argument>
            <argument type="service" id="service_container" />

            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="Cicada\Administration\Framework\Routing\AdministrationRouteScope">
            <argument>%cicada_administration.path_name%</argument>
            <tag name="cicada.route_scope"/>
        </service>

        <service id="Cicada\Administration\Snippet\SnippetFinder">
            <argument type="service" id="kernel" />
            <argument type="service" id="Doctrine\DBAL\Connection"/>
        </service>

        <service id="Cicada\Administration\Snippet\CachedSnippetFinder" decorates="Cicada\Administration\Snippet\SnippetFinder">
            <argument type="service" id="Cicada\Administration\Snippet\CachedSnippetFinder.inner" />
            <argument type="service" id="cache.object" />
        </service>

        <service id="Cicada\Administration\Framework\Routing\KnownIps\KnownIpsCollector"/>

        <service id="Cicada\Administration\Notification\NotificationDefinition">
            <tag name="cicada.entity.definition"/>
        </service>

        <service id="Cicada\Administration\Notification\Extension\IntegrationExtension">
            <tag name="cicada.entity.extension"/>
        </service>

        <service id="Cicada\Administration\Notification\Extension\UserExtension">
            <tag name="cicada.entity.extension"/>
        </service>

        <service id="Cicada\Administration\System\Channel\Subscriber\ChannelUserConfigSubscriber">
            <argument type="service" id="user_config.repository" />
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="Cicada\Administration\Controller\DashboardController" public="true">
            <call method="setContainer">
                <argument type="service" id="service_container"/>
            </call>
        </service>

        <service id="Cicada\Administration\Framework\Twig\ViteFileAccessorDecorator" decorates="pentatrion_vite.file_accessor">
            <argument>%pentatrion_vite.configs%</argument>
            <argument type="service" id="cicada.filesystem.asset"/>
            <argument type="service" id="assets.packages"/>
        </service>
    </services>
</container>
