<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="Cicada\Core\Framework\Adapter\Cache\CacheIdLoader" public="true">
            <argument type="service" id="Cicada\Core\Framework\Adapter\Storage\AbstractKeyValueStorage" />
            <argument type="service" id="cache.messenger.restart_workers_signal"/>
        </service>

        <service id="Cicada\Core\Framework\Adapter\Cache\CacheTracer" lazy="true">
            <argument type="service" id="Cicada\Core\System\SystemConfig\SystemConfigService"/>
            <argument type="service" id="Cicada\Core\Framework\Adapter\Translation\Translator"/>
            <argument type="service" id="Cicada\Core\Framework\Adapter\Cache\CacheTagCollection"/>
        </service>

        <service id="cicada.cache.invalidator.storage.redis_adapter" class="Redis" public="true">
            <!-- @deprecated tag:v6.7.0 - Replace factory method with getConnection on the next line -->
            <factory service="Cicada\Core\Framework\Adapter\Redis\RedisConnectionProvider" method="getOrCreateFromDsn"/>
            <argument>%cicada.cache.invalidation.delay_options.connection%</argument>
            <!-- @deprecated tag:v6.7.0 - remove next line (dsn argument) -->
            <argument>%cicada.cache.invalidation.delay_options.dsn%</argument>
        </service>

        <service id="cicada.cache.invalidator.storage.redis" class="Cicada\Core\Framework\Adapter\Cache\InvalidatorStorage\RedisInvalidatorStorage" lazy="true">
            <argument type="service" id="cicada.cache.invalidator.storage.redis_adapter"/>

            <tag name="cicada.cache.invalidator.storage" storage="redis"/>
        </service>

        <service id="cicada.cache.invalidator.storage.locator" class="Cicada\Core\Framework\DependencyInjection\TaggedServiceLocator">
            <argument type="tagged_locator" tag="cicada.cache.invalidator.storage" index-by="storage" />
        </service>

        <service id="Cicada\Core\Framework\Adapter\Cache\InvalidatorStorage\AbstractInvalidatorStorage" lazy="true">
            <factory service="cicada.cache.invalidator.storage.locator" method="get"/>

            <argument>%cicada.cache.invalidation.delay_options.storage%</argument>
        </service>

        <service id="Cicada\Core\Framework\Adapter\Cache\CacheInvalidator" public="true" lazy="true">
            <argument>%cicada.cache.invalidation.delay%</argument>
            <argument type="collection">
                <argument type="service" id="cache.object"/>
                <argument type="service" id="cache.http"/>
            </argument>
            <argument type="service" id="Cicada\Core\Framework\Adapter\Cache\InvalidatorStorage\AbstractInvalidatorStorage"/>
            <argument type="service" id="event_dispatcher"/>
            <argument type="service" id="Psr\Log\LoggerInterface"/>
            <argument>%kernel.environment%</argument>
        </service>

        <service id="Cicada\Core\Framework\Adapter\Cache\InvalidateCacheTask">
            <tag name="cicada.scheduled.task" />
        </service>

        <service id="Cicada\Core\Framework\Adapter\Cache\InvalidateCacheTaskHandler">
            <argument type="service" id="scheduled_task.repository"/>
            <argument type="service" id="logger"/>
            <argument type="service" id="Cicada\Core\Framework\Adapter\Cache\CacheInvalidator"/>

            <tag name="messenger.message_handler"/>
        </service>

        <service id="Cicada\Core\Framework\Adapter\Cache\CacheClearer">
            <argument type="collection">
                <argument type="service" key="object" id="cache.object"/>
                <argument type="service" key="http" id="cache.http"/>
            </argument>
            <argument type="service" id="cache_clearer"/>
            <argument type="service" id="Cicada\Core\Framework\Adapter\Cache\ReverseProxy\AbstractReverseProxyGateway" on-invalid="null"/>
            <argument type="service" id="Cicada\Core\Framework\Adapter\Cache\CacheInvalidator"/>
            <argument type="service" id="filesystem"/>
            <argument>%kernel.cache_dir%</argument>
            <argument>%kernel.environment%</argument>
            <argument>%cicada.deployment.cluster_setup%</argument>
            <argument type="service" id="messenger.default_bus"/>
            <argument type="service" id="logger"/>
        </service>

        <service id="Cicada\Core\Framework\Adapter\Cache\Message\CleanupOldCacheFoldersHandler">
            <argument type="service" id="Cicada\Core\Framework\Adapter\Cache\CacheClearer"/>

            <tag name="messenger.message_handler"/>
        </service>

        <service id="Cicada\Core\Framework\Adapter\Cache\CacheInvalidationSubscriber">
            <argument type="service" id="Cicada\Core\Framework\Adapter\Cache\CacheInvalidator"/>
            <argument type="service" id="Doctrine\DBAL\Connection"/>
            <argument>%cicada.cache.tagging.each_snippet%</argument>
            <argument>%cicada.cache.tagging.each_config%</argument>
            <argument>%cicada.product_stream.indexing%</argument>
            <tag name="kernel.event_listener" event="Cicada\Core\Content\LandingPage\Event\LandingPageIndexerEvent" method="invalidateIndexedLandingPages" priority="2000" />
            <tag name="kernel.event_listener" event="Cicada\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateCmsPageIds" priority="2001" />
            <tag name="kernel.event_listener" event="Cicada\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateLanguageRoute" priority="2003" />
            <tag name="kernel.event_listener" event="Cicada\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateContext" priority="2010" />
            <tag name="kernel.event_listener" event="Cicada\Core\Framework\DataAbstractionLayer\Event\EntityWrittenContainerEvent" method="invalidateSnippets" priority="2012" />
            <tag name="kernel.event_listener" event="Cicada\Core\Framework\Plugin\Event\PluginPostInstallEvent" method="invalidateConfig" priority="2001" />
            <tag name="kernel.event_listener" event="Cicada\Core\Framework\Plugin\Event\PluginPostActivateEvent" method="invalidateConfig" priority="2001" />
            <tag name="kernel.event_listener" event="Cicada\Core\Framework\Plugin\Event\PluginPostUpdateEvent" method="invalidateConfig" priority="2001" />
            <tag name="kernel.event_listener" event="Cicada\Core\Framework\Plugin\Event\PluginPostDeactivateEvent" method="invalidateConfig" priority="2001" />
            <tag name="kernel.event_listener" event="Cicada\Core\System\SystemConfig\Event\SystemConfigChangedHook" method="invalidateConfigKey" priority="2000" />
            <tag name="kernel.event_listener" event="product_search_config.written" method="invalidateSearch" priority="2002" />
        </service>

        <service id="Cicada\Core\Framework\Adapter\Cache\CacheTagCollector">
            <argument type="service" id="request_stack"/>
            <tag name="kernel.event_listener" />
        </service>

        <service id="Cicada\Core\Framework\Adapter\Cache\CacheTagCollection"/>

        <service id="Cicada\Core\Framework\Adapter\Cache\Http\CacheResponseSubscriber">
            <argument>%cicada.http.cache.default_ttl%</argument>
            <argument>%cicada.http.cache.enabled%</argument>
            <argument type="service" id="Cicada\Core\Framework\Routing\MaintenanceModeResolver"/>
            <argument type="service" id="Symfony\Component\HttpFoundation\RequestStack"/>
            <argument>%cicada.http_cache.stale_while_revalidate%</argument>
            <argument>%cicada.http_cache.stale_if_error%</argument>
            <tag name="kernel.event_subscriber"/>
        </service>

        <service id="esi" class="Cicada\Core\Framework\Adapter\Kernel\EsiDecoration" />

        <service id="Cicada\Core\Framework\Adapter\Cache\Http\CacheControlListener" autoconfigure="true" autowire="true">
            <argument>%cicada.http_cache.reverse_proxy.enabled%</argument>

            <tag name="kernel.event_listener" event="Cicada\Core\Framework\Event\BeforeSendResponseEvent" />
        </service>

        <service id="cicada.cache.reverse_proxy.redis" class="Redis">
            <factory service="Cicada\Core\Framework\Adapter\Cache\RedisConnectionFactory" method="create"/>
            <argument>%cicada.http_cache.reverse_proxy.redis_url%</argument>

            <deprecated package="cicada/core" version="6.7.0.0">tag:v6.7.0 - The %service_id% service will be removed in v6.7.0.0 without replacement.</deprecated>
        </service>

        <service id="Cicada\Core\Framework\Adapter\Cache\ReverseProxy\ReverseProxyCache">
            <argument type="service" id="Cicada\Core\Framework\Adapter\Cache\ReverseProxy\AbstractReverseProxyGateway"/>
            <argument type="service" id="Cicada\Core\Framework\Adapter\Cache\CacheTracer"/>
            <argument>%cicada.cache.invalidation.http_cache%</argument>
            <argument type="service" id="Cicada\Core\Framework\Adapter\Cache\CacheTagCollector"/>
            <tag name="kernel.event_listener"/>
        </service>

        <service id="Cicada\Core\Framework\Adapter\Command\CacheInvalidateDelayedCommand">
            <tag name="console.command"/>
            <argument type="service" id="Cicada\Core\Framework\Adapter\Cache\CacheInvalidator"/>
        </service>

        <service id="Cicada\Core\Framework\Adapter\Command\CacheClearAllCommand">
            <argument type="service" id="Cicada\Core\Framework\Adapter\Cache\CacheClearer"/>
            <argument>%kernel.environment%</argument>
            <argument>%kernel.debug%</argument>
            <tag name="console.command"/>
        </service>

        <service id="Cicada\Core\Framework\Adapter\Command\CacheClearHttpCommand">
            <argument type="service" id="Cicada\Core\Framework\Adapter\Cache\CacheClearer" />
            <tag name="console.command"/>
        </service>

        <service id="cicada.reverse_proxy.http_client" class="GuzzleHttp\Client"/>

        <service id="Cicada\Core\Framework\Adapter\Cache\ReverseProxy\AbstractReverseProxyGateway" class="Cicada\Core\Framework\Adapter\Cache\ReverseProxy\RedisReverseProxyGateway">
            <argument>%cicada.http_cache.reverse_proxy.hosts%</argument>
            <argument type="collection">
                <argument key="method">%cicada.http_cache.reverse_proxy.ban_method%</argument>
                <argument key="headers">%cicada.http_cache.reverse_proxy.ban_headers%</argument>
            </argument>
            <argument type="collection">
                <argument key="method">%cicada.http_cache.reverse_proxy.purge_all.ban_method%</argument>
                <argument key="headers">%cicada.http_cache.reverse_proxy.purge_all.ban_headers%</argument>
                <argument key="urls">%cicada.http_cache.reverse_proxy.purge_all.urls%</argument>
            </argument>
            <argument>%cicada.http_cache.reverse_proxy.max_parallel_invalidations%</argument>
            <argument type="service" id="cicada.cache.reverse_proxy.redis"/>
            <argument type="service" id="cicada.reverse_proxy.http_client"/>
        </service>

        <service id="Cicada\Core\Framework\Adapter\Cache\ReverseProxy\VarnishReverseProxyGateway">
            <argument>%cicada.http_cache.reverse_proxy.hosts%</argument>
            <argument>%cicada.http_cache.reverse_proxy.max_parallel_invalidations%</argument>
            <argument type="service" id="cicada.reverse_proxy.http_client"/>
            <argument type="service" id="logger"/>
        </service>

        <service id="Cicada\Core\Framework\Adapter\Cache\ReverseProxy\FastlyReverseProxyGateway">
            <argument type="service" id="cicada.reverse_proxy.http_client"/>
            <argument>%cicada.http_cache.reverse_proxy.fastly.service_id%</argument>
            <argument>%cicada.http_cache.reverse_proxy.fastly.api_key%</argument>
            <argument>%cicada.http_cache.reverse_proxy.fastly.soft_purge%</argument>
            <argument>%cicada.http_cache.reverse_proxy.max_parallel_invalidations%</argument>
            <argument>%cicada.http_cache.reverse_proxy.fastly.tag_prefix%</argument>
            <argument>%cicada.http_cache.reverse_proxy.fastly.instance_tag%</argument>
            <argument>%env(APP_URL)%</argument>
            <argument type="service" id="logger"/>
        </service>

        <!-- @deprecated tag:v6.7.0 - Remove-->
        <service id="Cicada\Core\Framework\Adapter\Cache\ReverseProxy\ReverseProxyCacheClearer">
            <argument type="service" id="Cicada\Core\Framework\Adapter\Cache\ReverseProxy\AbstractReverseProxyGateway"/>
            <tag name="kernel.cache_clearer"/>
        </service>

        <service id="Cicada\Core\Framework\Adapter\Cache\Telemetry\CacheTelemetrySubscriber">
            <argument type="service" id="Cicada\Core\Framework\Telemetry\Metrics\Meter" />

            <tag name="kernel.event_subscriber"/>
        </service>
    </services>
</container>
